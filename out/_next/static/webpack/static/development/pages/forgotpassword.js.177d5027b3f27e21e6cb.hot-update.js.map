{"version":3,"file":"static/webpack/static/development/pages/forgotpassword.js.177d5027b3f27e21e6cb.hot-update.js","sources":["webpack:///./pages/forgotpassword.js"],"sourcesContent":["import React, {useState} from 'react'\nimport '../assets/css/Customs.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Card from '../components/Card'\nimport { connect } from 'react-redux'\nimport { resetPassword } from '../store/actions/user'\nimport { Form, Button } from 'react-bootstrap'\nimport { useFormHandle } from '../util/hooks'\n\nconst index = (props) => {\n    \n    const [user, handleFormChange] = useFormHandle({\n        password: \"\",\n        confirmpassword: \"\",\n    });\n    const [isClick, setClick] = useState(false)\n    \n    const sendForgetPassword = () => {\n\n        setClick(true)\n\n        let token = props.location.query.token\n        console.log(token);\n        \n        if (!user.password || !user.confirmpassword || user.password !== user.confirmpassword) return\n\n        // let token = props.location.query.token\n        props.resetPassword({password: user.password, token});\n\n    }\n\n    return (\n        <div style={{display:\"flex\" , justifyContent:\"center\" , alignItems:\"center\" , height:\"100vh\" , backgroundImage:\"linear-gradient(120deg, #a1c4fd 0%, #c2e9fb 100%)\"}}>\n            <Card customStyle={{display:\"flex\" , flexDirection:\"column\" , justifyContent:\"center\" , alignItems:\"center\", minWidth:\"600px\" , padding:\"42px 42px\" , backgroundColor:\"white\" , borderRadius:\"20px\" }} >\n                \n                <h3 style={{marginBottom: '1.2em'}}>Reset Password</h3>\n                <Form style={{width:\"80%\"}}>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control isInvalid={ isClick && user.confirmpassword && user.confirmpassword !== user.password} type=\"password\" name=\"password\" value={user.password} onChange={handleFormChange} placeholder=\"Password\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicConfirmPassword\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control isInvalid={ isClick && user.confirmpassword && user.confirmpassword !== user.password} type=\"password\" name=\"confirmpassword\" value={user.confirmpassword} onChange={handleFormChange} placeholder=\"Confirm Password\" />\n                        <Form.Control.Feedback type=\"invalid\">\n                            password is not matched\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                </Form>\n\n                <div style={{display:\"flex\" , justifyContent:\"flex-end\" , width:\"80%\"}}>\n                    <Button className=\"mx-3 mb-2\" onClick={() => sendForgetPassword()}>\n                        Reset\n                    </Button>\n                </div>\n\n            </Card>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = {\n    resetPassword\n}\n\nexport default connect(null, mapDispatchToProps)(index)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAFA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AADA;AAIA;;;;A","sourceRoot":""}