{"version":3,"file":"static/webpack/static/development/pages/resetpassword.js.47e2cc7698835102d44e.hot-update.js","sources":["webpack:///./store/actions/user.js","webpack:///./util/api/controllers/user.js"],"sourcesContent":["import { LOGIN, LOGOUT } from '../types'\nimport API from '../../util/api'\n\nexport const logIn = (payload) => async dispatch => {\n\n  let res = await API.user.login(payload)\n  if (!res) return false\n  else {\n    dispatch({\n      type: LOGIN,\n      payload: res.data.user\n    })\n    return true;\n  }\n}\n\nexport const logOut = () => async dispatch => {\n\n  await API.user.logout();\n\n  dispatch({\n    type: LOGOUT\n  })\n}\n\nexport const forgetPassword = async() => {\n\n  return await API.user.requestRecoveryPassword()\n\n}","import axios from 'axios'\nimport API from '../../../configs/apis'\nimport Authorizor from '../libs/authorizationManager'\nimport executeHandler from '../libs/executeHandler'\n\nconst USER = API.USER\n\nconst createUser = async ( payload, errorHandler) => {\n\n    return await axios.post(USER + \"/user\" , payload).catch(executeHandler(errorHandler))\n\n}\n\nconst login = async (payload, errorHandler) => {\n\n    let res = await axios.post(USER + \"/user/validate\" , payload).catch(executeHandler(errorHandler))\n\n    if (!res) return res\n\n    let token = res.data.token\n\n    // save token\n    if (token) {\n        Authorizor.setToken(token)\n    }\n\n    return res\n\n}\n\nconst logout = () => {\n\n    // remove token\n    Authorizor.clear()\n\n}\n\nconst isLogin = () => {\n\n    let token = Authorizor.loadToken()\n    return token ? token.length > 0 : false\n\n}\n\nconst requestVerify = async (errorHandler) => {\n    return await axios.get(USER + \"/user/requestVerify\" , payload).catch(executeHandler(errorHandler))\n}\n\nconst requestRecoveryPassword = async (errorHandler) => {\n    return await axios.get(USER + \"/user/forgetPassword\" , payload).catch(executeHandler(errorHandler))\n}\n\nexport default {\n    createUser,\n    login,\n    logout,\n    isLogin,\n    requestRecoveryPassword\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAKA;AACA;AACA;AAFA;AALA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AADA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAMA;AACA;AAEA;AACA;AACA;AACA;AAZA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAgBA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;;;;A","sourceRoot":""}