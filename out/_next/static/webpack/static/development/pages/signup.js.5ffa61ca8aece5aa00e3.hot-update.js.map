{"version":3,"file":"static/webpack/static\\development\\pages\\signup.js.5ffa61ca8aece5aa00e3.hot-update.js","sources":["webpack:///./layouts/Regis/index.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\r\nimport GoogleLogin from 'react-google-login'\r\nimport { Form, Button, Row, Col, Container } from 'react-bootstrap'\r\nimport Loader from '../../components/Loader'\r\n\r\nimport { FB_TOKEN, GOOGLE_TOKEN } from '../../configs/oauth'\r\nimport api from '../../util/api'\r\nimport API from '../../configs/apis'\r\nimport signable from '../../util/api/libs/signable'\r\nimport { useFormHandle } from '../../util/hooks'\r\nimport {SeperateLine} from '../../components/SeperateLine'\r\n\r\nimport Link from 'next/link'\r\n\r\nfunction Regis() {\r\n\r\n  const [user, handleFormChange] = useFormHandle({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [isLoad, setLoad] = useState(false)\r\n  const [isClickSignup, setClickSignup] = useState(false)\r\n\r\n  const registration = async (payload, method) => {\r\n\r\n    setClickSignup(true)\r\n    if (payload.password !== payload.confirmpassword || !payload.name || !payload.email) return\r\n\r\n    let res = await api.user.createUser(signable[method](payload))\r\n    if (res.status === 200) {\r\n\r\n      login(payload, method)\r\n\r\n    } else {\r\n      //something happen\r\n    }\r\n  }\r\n\r\n  const login = async (payload, method) => {\r\n\r\n    let res = await api.user.login(signable[method](payload), (err) => console.log(err))\r\n    if (res.status === 200){\r\n      window.location.href = API.APP;\r\n      setLoad(true)\r\n    }\r\n\r\n  }\r\n\r\n  if (isLoad) return <Loader />\r\n\r\n  return (\r\n    <Container className=\"login-box\">\r\n      <Row style={{ minWidth: \"35%\" }}>\r\n        <Col sm={12}>\r\n          <Form className=\"mx-3\">\r\n            <Form.Group controlId=\"formBasicName\">\r\n              <Form.Label>Your name</Form.Label>\r\n              <Form.Control isInvalid={ isClickSignup && !user.name} type=\"text\" name=\"name\" value={user.name} onChange={handleFormChange} placeholder=\"Enter name\" />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                please enter name\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control isInvalid={ isClickSignup && !user.email} type=\"email\" name=\"email\" value={user.email} onChange={handleFormChange} placeholder=\"Enter email\" />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                please enter email\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control isInvalid={ isClickSignup && user.confirmpassword && user.confirmpassword !== user.password} type=\"password\" name=\"password\" value={user.password} onChange={handleFormChange} placeholder=\"Password\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicConfirmPassword\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control isInvalid={ isClickSignup && user.confirmpassword && user.confirmpassword !== user.password} type=\"password\" name=\"confirmpassword\" value={user.confirmpassword} onChange={handleFormChange} placeholder=\"Confirm Password\" />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                password is not matched\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Form>\r\n          <Row>\r\n            <Col className=\"d-flex flex-column\">\r\n              <Button className=\"mx-3 mb-2\" onClick={() => registration(user, \"LocalSign\")}>signup</Button>\r\n              <Link href=\"/\"><Button variant=\"outline-primary\" className=\"mx-3 mb-2\" >back to login</Button></Link>\r\n              <SeperateLine style={{margin:\" 12px 0\"}} />\r\n              <FacebookLogin\r\n                appId={FB_TOKEN}\r\n                autoLoad={false}\r\n                fields=\"name,email,picture\"\r\n                callback={(response) => login(response, \"FacebookSign\")}\r\n                render={renderProps => (\r\n                  <Button variant=\"facebook\" className=\"mx-3 mb-2\" onClick={renderProps.onClick}>login with Facebook</Button>\r\n                )}\r\n              />\r\n              <GoogleLogin\r\n                clientId={GOOGLE_TOKEN}\r\n                buttonText=\"Login with google\"\r\n                onSuccess={(response) => login(response, \"GoogleSign\")}\r\n                cookiePolicy={'single_host_origin'}\r\n                render={renderProps => (\r\n                  <Button variant=\"light\" className=\"mx-3 shadow-sm\" onClick={renderProps.onClick}>login with Google</Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Regis"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAHA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAKA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAceA;AACA;AACA;;;;A","sourceRoot":""}